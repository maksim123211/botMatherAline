from app.bot import handler
from app.models import Account, Product, Category, Order, OrderItem
from django.db.models import Sum

from aiogram.types import InlineKeyboardMarkup as IKM, InlineKeyboardButton as IKB


@handler.message(name='üß∫ –ö–æ—Ä–∑–∏–Ω–∞', dialog=Account.Dialog.DEFAULT)
async def _(message, path_args, bot, user):
    await shopping_cart(user)


async def shopping_cart(user):
    await user.reply("–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å: ", keyboard=IKM(inline_keyboard=[
        [IKB("–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã", callback_data="active_order")],
        [IKB("–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤", callback_data="archive_order")]
    ]))


@handler.callback(name='active_order', dialog=Account.Dialog.DEFAULT)
async def _(callback, path_args, bot, user):
    await callback.message.delete()
    user_order = OrderItem.objects.filter(buyer=user).all()
    order = Order.objects.filter(status=Order.STATUS_NEW or Order.STATUS_IN_PROGRESS).first()
    if not user_order:
        await user.reply('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç!')
    else:
        await user.reply("üõç –ü—Ä–æ–¥—É–∫—Ç—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ:", keyboard=IKM(inline_keyboard=[
            [IKB(f'üñä {order_item}', callback_data=f'update_order {order_item.id}')] for order_item in user_order] + [
                [IKB('üí∑ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', callback_data=f'create_an_order {order.id}')]
            ]))


@handler.callback(name='create_an_order', dialog=Account.Dialog.DEFAULT)
async def _(callback, path_args, bot, user):
    await callback.message.delete()
    order_items = OrderItem.objects.filter(order=int(path_args[1]))

    # –°—É–º–º–∏—Ä—É–µ–º –≤—Å–µ –ø–æ–ª—è price
    total_price = order_items.aggregate(total=Sum('price'))['total']

    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print(f"–û–±—â–∞—è —Å—É–º–º–∞: {total_price}")

    await user.reply(f"–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞: {total_price}")
    await user.reply("–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Å–¥–µ–ª–∞—Ç—å —Å —Ç–æ–≤–∞—Ä–æ–º: ", keyboard=IKM(inline_keyboard=[
        [IKB('üñä –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ', callback_data=f'change_the_order {path_args[1]} {"update"}')],
        [IKB('üóë –£–¥–∞–ª–∏—Ç—å', callback_data=f'change_the_order {path_args[1]} {"delete"}')]
    ]))


@handler.callback(name='update_order', dialog=Account.Dialog.DEFAULT)
async def _(callback, path_args, bot, user):
    await callback.message.delete()
    await user.reply("–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Å–¥–µ–ª–∞—Ç—å —Å —Ç–æ–≤–∞—Ä–æ–º: ", keyboard=IKM(inline_keyboard=[
        [IKB('üñä –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ', callback_data=f'change_the_order {path_args[1]} {"update"}')],
        [IKB('üóë –£–¥–∞–ª–∏—Ç—å', callback_data=f'change_the_order {path_args[1]} {"delete"}')]
    ]))


@handler.callback(name='change_the_order', dialog=Account.Dialog.DEFAULT)
async def _(callback, path_args, bot, user):
    await callback.message.delete()
    if path_args[2] == "delete":
        order = OrderItem.objects.filter(id=int(path_args[1])).first()
        order.delete()
        await user.return_the_keyboard("‚úÖ –ü—Ä–æ–¥—É–∫—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã!")
    elif path_args[2] == "update":
        await user.reply("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ü–∏–∏ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã:")
        user.dialog = Account.Dialog.GET_COUNT_PRODUCTS
        user.temp = path_args[1]
        user.save()
    else:
        await user.return_the_keyboard("‚ùå –í–æ–∑–Ω–∏–∫–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞!")


@handler.callback(name='back_shopping_cart', dialog=Account.Dialog.DEFAULT)
async def _(callback, path_args, bot, user):
    await callback.message.delete()
    await shopping_cart(user)
